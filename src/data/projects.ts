import { Project } from "@/types/project";

export const projectsData: Project[] = [
  {
    id: "1",
    title: "Next-Gen AI Multimodal Chat",
    description:
      "Developed a real-time multimodal application using Google's Gemini 2.0 API and Next.js, offering seamless audio, video, and screen-sharing interactions with advanced AI processing. Built from scratch to gain deeper understanding of architectural design and explore customization opportunities, featuring Next.js 14 with App Router & Server Components, WebSocket/WebRTC for real-time communication, Gemini Pro Vision & Gemini Pro with streaming support, and beautiful UI with Framer Motion animations.",
    image: "/projects/ai-multimodal-chat.png",
    technologies: [
      "Next.js 14",
      "App Router",
      "Server Components",
      "WebSocket",
      "WebRTC",
      "Web Audio API",
      "Gemini Pro Vision",
      "Gemini Pro",
      "Framer Motion",
      "Tailwind CSS",
      "TypeScript",
      "React Hooks",
    ],
    category: "AI & Machine Learning",
    links: {
      github: "https://github.com/aabdullah27",
    },
    featured: true,
  },
  {
    id: "2",
    title: "Early Age Development Backend",
    description:
      "Created the backend for the EAD Kids Incubator project by Technogroup.ai, which empowers students with AI-driven innovation by integrating hands-on AI projects into school IT curriculum. Built with a microservices architecture and integrated RAG pipeline, the system enhances IT lessons with real-world AI applications, STEM innovation, and future-ready skills, helping schools partner with the incubator program.",
    image: "/projects/ead-backend.png",
    technologies: [
      "FastAPI",
      "Microservices",
      "RAG Pipeline",
      "Vector Databases",
      "LangChain",
      "LlamaIndex",
      "PostgreSQL",
      "Docker",
      "Kubernetes",
      "AI Integration",
      "Python",
    ],
    category: "Backend Development",
    links: {
      github: "https://github.com/aabdullah27",
    },
    featured: true,
  },
  {
    id: "3",
    title: "Student Score Analysis",
    description:
      "Conducted comprehensive data analysis on student scores using Python and powerful libraries. The project involved extensive data cleaning, exploratory data analysis (EDA), and visualization to uncover valuable insights about student performance. Created visually appealing charts with Matplotlib and Seaborn to make complex data more accessible, and derived actionable insights highlighting key factors impacting student performance with data-driven recommendations.",
    image: "/projects/student-score-analysis.png",
    technologies: [
      "Python",
      "Data Analysis",
      "Exploratory Data Analysis",
      "Data Visualization",
      "Matplotlib",
      "Seaborn",
      "Pandas",
      "NumPy",
      "Statistical Analysis",
      "Data Cleaning",
    ],
    category: "Data Science",
    links: {
      github: "https://github.com/aabdullah27",
    },
    featured: true,
  },
  {
    id: "4",
    title: "Ratta AI",
    description:
      "A startup aiming to transition Pakistani students from rote learning (Ratta) to concept understanding, offering personalized learning paths and AI-driven exam prep. Built the backend with RAG pipelines and AI agents to provide personalized learning experiences. The prototype is complete with website flow, AI chat, and MCQ generation features, now focused on release and deployment optimization.",
    image: "/projects/ratta-ai.png",
    technologies: [
      "Backend Development",
      "RAG Pipelines",
      "AI Agents",
      "LangChain",
      "Vector Databases",
      "FastAPI",
      "Python",
      "Next.js",
      "TypeScript",
      "Tailwind CSS",
    ],
    category: "AI & Education",
    links: {
      github: "https://github.com/aabdullah27",
    },
    featured: true,
  },
  {
    id: "5",
    title: "AI MCQ Generation System",
    description:
      "A cutting-edge tool that generates Multiple Choice Questions (MCQs) from tech-related documents, including PDFs and Word files. Utilizing advanced AI models from Groq and Meta, the system analyzes document content to produce customizable MCQs with difficulty levels from Easy to Hard, generating 5-30 questions per document. Features a user-friendly Streamlit interface with export capabilities for offline study or formal assessments.",
    image: "/projects/ai-mcq-generation.png",
    technologies: [
      "Groq",
      "Retrieval Augmented Generation",
      "Document Retrieval Systems",
      "Large Language Models",
      "AI Agent Development",
      "LangChain",
      "Streamlit",
      "Generative AI",
      "Vector Databases",
      "Python",
    ],
    category: "AI & Education",
    links: {
      github: "https://github.com/aabdullah27",
    },
    featured: false,
  },
];
